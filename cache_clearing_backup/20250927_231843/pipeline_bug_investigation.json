{
  "timestamp": "2025-09-27T23:12:06.098430",
  "log_entries": [
    "[23:12:06] \ud83d\udea8 COMPREHENSIVE PIPELINE BUG INVESTIGATION",
    "[23:12:06] ============================================================",
    "[23:12:06] \ud83d\udd0d ANALYZING MALFORMED PHONE NUMBER PATTERNS...",
    "[23:12:06] Total numbers analyzed: 8,639",
    "[23:12:06] double_plus: 5 (0.1%)",
    "[23:12:06]   Examples: ['+1+232132379', '+1+444930787', '+1+493020270', '+1+778123568', '+1+862110086']",
    "[23:12:06] correct_format: 8,541 (98.9%)",
    "[23:12:06]   Examples: ['+10000000000', '+10000000003', '+10000019714', '+10000019844', '+10000019872']",
    "[23:12:06] international: 93 (1.1%)",
    "[23:12:06]   Examples: ['+2129173017', '+23221001384', '+23221001492', '+23221001528', '+23221001534']",
    "[23:12:06] \ud83d\udd0d INVESTIGATING PHONE EXTRACTION SOURCE...",
    "[23:12:06] Checking sms.py...",
    "[23:12:06]   Found phone patterns: ['\"(?:\\\\((\\\\d+)\\\\))?\\\\.(jpg|gif|png|vcf)$\"', '\"(.*?)(?:\\\\((\\\\d+)\\\\))?(\\\\.\\\\w+)?$\"', '\"(\\\\+\\\\d{1,3}\\\\s*\\\\d{1,14})\"']",
    "[23:12:06]   Phone extraction context in sms.py:",
    "[23:12:06]     ) -> Optional[str]:",
    "[23:12:06]     \"\"\"",
    "[23:12:06]     Automatically extract phone alias from HTML content when prompts are disabled.",
    "[23:12:06]     ",
    "[23:12:06]     Args:",
    "[23:12:06] Checking core/phone_lookup.py...",
    "[23:12:06]   Found phone patterns: ['\"# Example: +1234567890|John Doe|filter=spam\\\\n\"', '\"[\\\\s\\\\-]+\"', '\"tel\" href=\"tel:+1234567890\"']",
    "[23:12:06]   Phone extraction context in core/phone_lookup.py:",
    "[23:12:06]     ) -> Optional[str]:",
    "[23:12:06]     \"\"\"",
    "[23:12:06]     Automatically extract phone alias from HTML content when prompts are disabled.",
    "[23:12:06]     ",
    "[23:12:06]     Args:",
    "[23:12:06] Checking processors/file_processor.py...",
    "[23:12:06] Checking processors/html_processor.py...",
    "[23:12:06]   Found phone patterns: ['\"\\\\+?1?\\\\s*\\\\(?([0-9]{3})\\\\)?[-.\\\\s]?([0-9]{3})[-.\\\\s]?([0-9]{4})\"', '\"\\\\+?1?\\\\s*\\\\(?([0-9]{3})\\\\)?[-.\\\\s]?([0-9]{3})[-.\\\\s]?([0-9]{4})\"']",
    "[23:12:06]   Phone extraction context in processors/html_processor.py:",
    "[23:12:06]     ",
    "[23:12:06]     ",
    "[23:12:06]     def extract_own_phone_number(soup: BeautifulSoup) -> Optional[str]:",
    "[23:12:06]     \"\"\"",
    "[23:12:06]     Extract the user's own phone number from the HTML content.",
    "[23:12:06] \ud83d\udd0d CHECKING ORIGINAL HTML SOURCE FORMATS...",
    "[23:12:06] Phone formats found in HTML source:",
    "[23:12:06] \ud83d\udd0d TRACING UNKNOWN_NUMBERS.CSV GENERATION...",
    "[23:12:06] Files with CSV writing capability: []",
    "[23:12:06] \n\ud83d\udcca INVESTIGATION SUMMARY:",
    "[23:12:06] ========================================",
    "[23:12:06] Total numbers: 8,639",
    "[23:12:06] Malformed numbers: 98 (1.1%)",
    "[23:12:06] Correct format: 8,541",
    "[23:12:06] Most common malformed pattern: international (93 numbers)",
    "[23:12:06] Files that write CSV: 0",
    "[23:12:06] Phone extraction patterns found: 83"
  ],
  "results": {
    "total_numbers": 8639,
    "malformed_patterns": {
      "double_plus": 5,
      "correct_format": 8541,
      "international": 93
    },
    "malformed_percentage": 1.134390554462322,
    "csv_writers": [],
    "extraction_patterns": [
      "\"(?:\\((\\d+)\\))?\\.(jpg|gif|png|vcf)$\"",
      "\"(.*?)(?:\\((\\d+)\\))?(\\.\\w+)?$\"",
      "\"(\\+\\d{1,3}\\s*\\d{1,14})\"",
      "\"tel:([+\\d\\s\\-\\(\\)]+)\"",
      "\"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}_[0-9]{2}_[0-9]{2}Z.*[0-9-]+\"",
      "\"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}_[0-9]{2}_[0-9]{2}Z-\\d+-\\d+\"",
      "\">([^<]+)<\"",
      "\"tel\" href=\"tel:+1234567890\"",
      "\"tel:+1234567890\"",
      "\"tel:+1234567890\""
    ],
    "html_formats_sample": []
  }
}